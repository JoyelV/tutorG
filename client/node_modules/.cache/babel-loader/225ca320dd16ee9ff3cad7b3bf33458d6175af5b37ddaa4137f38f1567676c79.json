{"ast":null,"code":"// import * as jwt_decode from 'jwt-decode';\n\n// export const getUserIdFromToken = (): string | null => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//         try {\n//             const decoded: any = jwt_decode(token);\n//             return decoded.userId;  // Assuming the userId is stored under 'userId' key in the token payload\n//         } catch (error) {\n//             console.error('Error decoding token:', error);\n//         }\n//     }\n//     return null; // Return null if no token exists or it cannot be decoded\n// };","map":{"version":3,"names":[],"sources":["B:/WEEKS/Week 23_Project 1st week/client/src/utils/tokenUtils.ts"],"sourcesContent":["// import * as jwt_decode from 'jwt-decode';\r\n\r\n// export const getUserIdFromToken = (): string | null => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//         try {\r\n//             const decoded: any = jwt_decode(token);\r\n//             return decoded.userId;  // Assuming the userId is stored under 'userId' key in the token payload\r\n//         } catch (error) {\r\n//             console.error('Error decoding token:', error);\r\n//         }\r\n//     }\r\n//     return null; // Return null if no token exists or it cannot be decoded\r\n// };\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}